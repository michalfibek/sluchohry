{block styles}
<link rel="stylesheet" href="{$basePath}/assets/vendor/jquery.fine-uploader/fine-uploader.min.css">
{include parent}
<style>
    /* For the bootstrapped demos */
    li.alert-success {
        background-color: #DFF0D8;
    }

    li.alert-error {
        background-color: #F2DEDE;
    }

    .alert-error .qq-upload-failed-text {
        display: inline;
    }
</style>
{/block}


{block content}

<h1 n:block="title">{ifset $song}Edit {$song->title}{else}Upload new song{/ifset}</h1>

{ifset $song}{else}
<!-- Fine Uploader DOM Element
====================================================================== -->
<div id="file-uploader" class="col-xs-5"></div>

<!-- Fine Uploader template
====================================================================== -->
<script type="text/template" id="qq-template-bootstrap">
    <div class="qq-uploader-selector qq-uploader span12">
        <div class="qq-upload-drop-area-selector qq-upload-drop-area span12" qq-hide-dropzone>
            <span>Drop files here to upload</span>
        </div>
        <div class="qq-upload-button-selector qq-upload-button btn btn-success" style="width: auto;">
            <div><i class="icon-upload icon-white"></i>Upload a file</div>
        </div>
    <span class="qq-drop-processing-selector qq-drop-processing">
      <span>Processing dropped files...</span>
      <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>
    </span>
        <ul class="qq-upload-list-selector qq-upload-list" style="margin-top: 10px; text-align: center;">
            <li>
                <div class="qq-progress-bar-container-selector">
                    <div class="qq-progress-bar-selector qq-progress-bar"></div>
                </div>
                <span class="qq-upload-spinner-selector qq-upload-spinner"></span>
                <span class="qq-upload-file-selector qq-upload-file"></span>
                <span class="qq-upload-size-selector qq-upload-size"></span>
                <a class="qq-upload-cancel-selector qq-upload-cancel" href="#">Cancel</a>
                <span class="qq-upload-status-text-selector qq-upload-status-text"></span>
            </li>
        </ul>
    </div>
</script>
{/ifset}

<div class="clearfix"></div>

<div class="container song-editor{ifset $song}{else} hidden{/ifset}">

    <div id="song-01" class="song col-sm-5">
        <form n:name="songEditForm" class="form-horizontal">
            <input n:name="songId" id="songId" type="hidden">
            <div class="form-group">
                <label n:name="artist" for="artist" class="col-sm-4 control-label">Artist:</label>
                <div class="col-sm-8">
                    <input n:name="artist" type="text" class="form-control" id="artist">
                </div>
            </div>
            <div class="form-group">
                <label n:name="title" for="title" class="col-sm-4 control-label">Title:</label>
                <div class="col-sm-8">
                    <input n:name="title" type="text" class="form-control" id="title">
                </div>
            </div>
            <div class="form-group">
                <label for="duration" class="col-sm-4 control-label">Duration:</label>
                <div class="col-sm-8">
                    <p class="form-control-static" id="duration">{ifset $song}{$song->duration|songTime}{/ifset}</p>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-12 text-right">
                    <button type="button" class="btn btn-default" id="ex1-play-original"><span class="glyphicon glyphicon-play"></span> Play</button>
                    <button type="button" class="btn btn-default" id="ex1-stop"><span class="glyphicon glyphicon-stop"></span> Stop</button>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-8">
                    <button n:name="update" type="submit" class="btn btn-default">Update</button>
                    <button n:name="delete" type="submit" class="btn btn-default">Delete</button>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-12">
                    <canvas width='600' height='100' id='waveform'></canvas>
                </div>

            </div>
        </form>
    </div>



</div>



{/block}

{block scripts}
{include parent}

        <script src="{$basePath}/assets/vendor/nette.ajax.js/nette.ajax.js"></script>
<script src="{$basePath}/assets/vendor/jquery.fine-uploader/jquery.fine-uploader.min.js"></script>
<script src="{$basePath}/assets/vendor/soundcloud-waveform-generator/soundcloud-waveform.js"></script>
        <script type="text/javascript">
            $(function(){
//                $.nette.init();
                var songEditors = [],
                    defaultUri = '/assets/sounds/songs/',
                    canvas = $('#waveform').get(0),
                    ctx = canvas.getContext('2d'),
                    canvas_width = 600,
                    canvas_height = 100;

                var Song = $class({

                    constructor: function(songId, artist, title, duration, filename) {
                        this.songId = String(songId);
                        this.artist = artist;
                        this.title = title;
                        this.duration = duration;
                        this.filename = filename;
                    },

                    show: function() {
                        $('.song-editor').removeClass('hidden');
                        this.generateWaveform();
                    },

                    populateForm: function() {
                        $('#songId').val(this.songId);
                        $('#artist').val(this.artist);
                        $('#title').val(this.title);
                        $('#duration').append(this.duration);
                    },

                    generateWaveform: function() {
                        var xhr = new XMLHttpRequest();
                        var url = defaultUri + this.filename + '.mp3';
                        xhr.open('GET', url, true);
                        xhr.responseType = 'blob';
                        xhr.onload = function() {
                            SoundCloudWaveform.generate(xhr.response, {
                                canvas_width: canvas_width,
                                canvas_height: canvas_height,
//                                wave_color: '#ff0000',
                                onComplete: function(png, pixels) {
                                    ctx.putImageData(pixels, 0, 0);
                                }
                            });
                        };
                        xhr.send();
                     },

                    showPlayMarker: function() {
                        var image = ctx.getImageData(0, 0, canvas_width, canvas_height);
                        ctx.beginPath();
                        ctx.rect(20, 30, 5, 5);
                        ctx.fillStyle = '#8ED6FF';
                        ctx.fill();
                        ctx.lineWidth = 20;
                        ctx.strokeStyle = 'black';
                        ctx.stroke();
                        ctx.putImageData(image, 0, 0);
                    },

                    initPlayer: function() {
                        $('#ex1-play-original').on('click', function(){
                            song1.stop().play();
                        });
                        $('#ex1-stop').on('click', function(){
                            song1.stop();
                        });

                        song1 = new Howl({
                            src: [this.defaultUri + '{$song->filename|noescape}.mp3']
                        });
                    }
                });


                {ifset $song}
                var s = new Song({$song->id}, {$song->artist}, {$song->title}, {$song->duration}, {$song->filename});
                s.initPlayer();
                s.generateWaveform();
                s.showPlayMarker();
                {else}
                $("#file-uploader").fineUploader({
                    debug: true,
                    multiple: false,
                    element: $('#file-uploader'),
                    request: {
                        endpoint: 'admin?do=uploadFile'
                    },
                    validation: {
                        allowedExtensions: ['mp3', 'wav', 'ogg'],
                        sizeLimit: 10485760 // 10 MB - size is in bytes
                    },
                    template: 'qq-template-bootstrap',
                    classes: {
                        success: 'alert alert-success',
                        fail: 'alert alert-error'
                    }
                }).on('complete', function (event, id, name, responseJSON) {
                    var s = new Song(responseJSON["songId"], responseJSON["artist"], responseJSON["title"], responseJSON["duration"], responseJSON["filename"]);
                    s.show();
                    s.populateForm();
                    songEditors.push(this.s);
                });
                {/ifset}

            });

        </script>
{/block}
